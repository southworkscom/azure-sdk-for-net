// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.BotFramework.Connector.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for TextFormat.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TextFormat
    {
        [EnumMember(Value = "markdown")]
        Markdown,
        [EnumMember(Value = "plain")]
        Plain,
        [EnumMember(Value = "xml")]
        Xml
    }
    internal static class TextFormatEnumExtension
    {
        internal static string ToSerializedValue(this TextFormat? value)
        {
            return value == null ? null : ((TextFormat)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this TextFormat value)
        {
            switch( value )
            {
                case TextFormat.Markdown:
                    return "markdown";
                case TextFormat.Plain:
                    return "plain";
                case TextFormat.Xml:
                    return "xml";
            }
            return null;
        }

        internal static TextFormat? ParseTextFormat(this string value)
        {
            switch( value )
            {
                case "markdown":
                    return TextFormat.Markdown;
                case "plain":
                    return TextFormat.Plain;
                case "xml":
                    return TextFormat.Xml;
            }
            return null;
        }
    }
}

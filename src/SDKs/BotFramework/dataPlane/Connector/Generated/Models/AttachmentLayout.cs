// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.BotFramework.Connector.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AttachmentLayout.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AttachmentLayout
    {
        /// <summary>
        /// Display multiple rich cards in carousel format.
        /// </summary>
        [EnumMember(Value = "list")]
        List,
        /// <summary>
        /// Display multiple rich cards in carousel format. If the channel does
        /// not support carousel format, it will display the rich cards in list
        /// format.
        /// </summary>
        [EnumMember(Value = "carousel")]
        Carousel
    }
    internal static class AttachmentLayoutEnumExtension
    {
        internal static string ToSerializedValue(this AttachmentLayout? value)
        {
            return value == null ? null : ((AttachmentLayout)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AttachmentLayout value)
        {
            switch( value )
            {
                case AttachmentLayout.List:
                    return "list";
                case AttachmentLayout.Carousel:
                    return "carousel";
            }
            return null;
        }

        internal static AttachmentLayout? ParseAttachmentLayout(this string value)
        {
            switch( value )
            {
                case "list":
                    return AttachmentLayout.List;
                case "carousel":
                    return AttachmentLayout.Carousel;
            }
            return null;
        }
    }
}
